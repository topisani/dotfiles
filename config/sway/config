# Read `man 5 sway` for a complete reference.
### Variables
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
floating_modifier $mod normal
# Your preferred terminal emulator
set $term tmux-term
# Your preferred application launcher
set $menu rofi -show drun

set $conf ~/.config/sway
set $scripts $conf/scripts

### Output configuration
output * bg #18191c solid_color
output * enable dpms enable
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Input configuration
input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}
input * {
    xkb_layout dk_topisani
    xkb_options ctrl:nocaps,compose:rctrl
}

input "2:10:TPPS/2_Elan_TrackPoint" {
    accel_profile flat
    pointer_accel 1
}

default_border pixel 1
hide_edge_borders smart

gaps inner 5
smart_gaps on

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
# start a terminal
bindsym $mod+Return exec $term
bindsym $mod+Shift+Return exec kitty -c ~/.config/kitty/kitty.conf -c ~/.config/kitty/leader.conf
bindsym $mod+Shift+c exec colorscheme-switch
bindsym $mod+Ctrl+c exec colorscheme-switch -g
bindsym $mod+c exec kitty --class="floating" -o window_padding_width=4 -o initial_window_width=400 -o initial_window_height=200 qalc

# kill focused window
# bindsym $mod+q kill

# start your launcher
bindsym $mod+Space exec $menu
# swayr
bindsym $mod+Shift+Space exec swayr switch-window
bindsym $mod+Delete exec swayr quit-window
bindsym Mod1+Tab exec swayr switch-to-urgent-or-lru-window
bindsym $mod+Next exec swayr next-window
bindsym $mod+Prior exec swayr prev-window

# reload the configuration file
bindsym $mod+Shift+r reload
# exit sway (logs you out of your wayland session)
bindsym $mod+Shift+e exit

# Toggle waybar
bindsym $mod+p exec killall -SIGUSR1 waybar

bindsym XF86AudioMute exec volume -n mute toggle
bindsym XF86AudioRaiseVolume exec volume -n volume up
bindsym XF86AudioLowerVolume exec volume -n volume down
bindsym XF86MonBrightnessUp exec brightness -n up
bindsym XF86MonBrightnessDown exec brightness -n down
bindsym Print exec rofi-shoot
#
# Moving around:
#


bindsym $mod+o exec $scripts/ws-swap focus
bindsym $mod+Shift+o exec $scripts/ws-swap swap

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# _move_ the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+s splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
# bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+m fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+f floating toggle

# Swap focus between the tiling area and the floating area
# bindsym $mod+tab focus mode_toggle

# move focus to the parent container
bindsym $mod+a focus parent
bindsym $mod+Shift+a focus child
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+Shift+minus scratchpad show

bindsym $mod+n exec dunstctl action
bindsym $mod+Shift+n exec dunstctl context
bindsym $mod+Ctrl+n exec dunstctl close
bindsym $mod+Ctrl+Shift+n exec dunstctl history-pop
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10 px or 10 ppt
    bindsym $down resize grow height 10 px or 10 ppt
    bindsym $up resize shrink height 10 px or 10 ppt
    bindsym $right resize grow width 10 px or 10 ppt

    # ditto, with arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


bindsym $mod+Ctrl+$left resize shrink width 10 px or 10 ppt
bindsym $mod+Ctrl+$down resize grow height 10 px or 10 ppt
bindsym $mod+Ctrl+$up resize shrink height 10 px or 10 ppt
bindsym $mod+Ctrl+$right resize grow width 10 px or 10 ppt

# ditto, with arrow keys
bindsym $mod+Ctrl+Left resize shrink width 10 px or 10 ppt
bindsym $mod+Ctrl+Down resize grow height 10 px or 10 ppt
bindsym $mod+Ctrl+Up resize shrink height 10 px or 10 ppt
bindsym $mod+Ctrl+Right resize grow width 10 px or 10 ppt

bindsym $mod+g exec $scripts/toggle-gaps

# bindsym $mod+c exec swayr execute-swaymsg-command
# bindsym $mod+Shift+c exec swayr execute-swayr-command

font Roboto 10
# Theme colors
# class                   border  backgr. text    indic.   child_border
  client.focused          #178ca6 #076096 #feebec #FDF6E3  #178ca6
  client.focused_inactive #343434 #343434 #feebec #454948  #343434 
  client.unfocused        #18191c #18191c #feebec #454948  #18191c
  client.urgent           #CB4B16 #FDF6E3 #feebec #268BD2  #CB4B16 
  client.placeholder      #000000 #0c0c0c #ffffff #000000  #000000 

  client.background       #18191c


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

bar {
  swaybar_command waybar
}

#for_window [app_id="waybar" floating] move position 5000 5000

for_window [app_id="pavucontrol"] floating enable

# Custom app_id for foating
for_window [app_id="floating"] floating enable

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

exec xrdb -load ~/.Xresources
# exec dunst # Started by systemd
exec battery_notifyd
# exec dex --autostart
exec $scripts/autotile
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# exec /usr/lib/xdg-desktop-portal -r 
# exec /usr/lib/xdg-desktop-portal-wlr
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

exec redshift -l 56:10 -m wayland
exec nm-applet --indicator
exec screen-layout -d


# # Start SWAYR
# # install with cargo install swayr
exec env RUST_BACKTRACE=1 swayrd > /var/log/swayrd.log 2>&1

bindsym $mod+q kill

exec swayidle -w \
     timeout 300 'swaylock -f -c 18191c' \
     timeout 600 'swaymsg "output * dpms off"' \
     resume 'swaymsg "output * dpms on"' \
     before-sleep 'swaylock -f -c 18191c'

# include /etc/sway/config.d/*
