# kakoune.cr
# https://github.com/alexherbo2/kakoune.cr
evaluate-commands %sh{
  kcr init kakoune
  cork init
}

def load-conf -params 1 %{
  source "%val{config}/config/%arg{1}.kak"
}

# User interface ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈

set-option -add global ui_options terminal_status_on_top=false
set-option -add global ui_options terminal_assistant=none
set-option -add global ui_options terminal_set_title=no


set-option global modelinefmt '{{mode_info}} {magenta}%val{client}{default} at {yellow}%val{session}{default} on {green}%val{bufname}{default} {{context_info}} {cyan}U+%sh{printf ''%04x'' "$kak_cursor_char_value"}{default} {cyan}%val{cursor_line}{default}:{cyan}%val{cursor_char_column}{default}'

# Window-based settings
hook global WinCreate .* %{
  addhl window/matching show-matching
  addhl window/show-whitespaces show-whitespaces
  # addhl window/numbers number-lines -hlcursor -separator ' '
}

# Leader / Filetype modes ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈

# [space] [backspace] [ret]
map -docstring 'leader' global normal <space> ': enter-user-mode user<ret>'  
map -docstring 'remove all sels except main' global normal <backspace> <space> 
map -docstring 'remove main sel' global normal <a-backspace> <a-space> 

# User Mode bindings
map -docstring 'Open terminal' global user <ret> ': connect terminal<ret>'

# Filetype mode from [,] or [c-f]
declare-user-mode filetype
unmap global normal ,
map global normal , ': enter-user-mode filetype<ret>'
map global normal <c-f> ': enter-user-mode filetype<ret>'
map global insert <c-f> ': enter-user-mode filetype<ret>'

# Plugins ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈

cork tmux https://github.com/alexherbo2/tmux.kak %{
  tmux-integration-enable

  define-command -override tmux-terminal-bottom-panel -params .. -shell-completion -docstring 'tmux-terminal-bottom-panel <program> [arguments]: create a new terminal as a tmux bottom panel' %{
    tmux split-window -v -l 20 -t '{bottom}' -c %sh{pwd} %arg{@}
  }
  alias global bottom-panel tmux-terminal-bottom-panel
}

cork lib https://github.com/alexherbo2/lib.kak %{
  # Indentation
  set-indent global 2
  enable-detect-indent
  enable-auto-indent
  # Disable indentation hooks
  set global disabled_hooks '(?!auto)(?!detect)\K(.+)-(trim-indent|insert|indent)'
}

# Auto-pairing of characters
cork auto-pairs https://github.com/alexherbo2/auto-pairs.kak %{
  enable-auto-pairs
}

nop cork kakoune-find https://github.com/occivink/kakoune-find %{
  define-command grep-apply-changes -docstring \
    "grep-apply-changes: apply changes specified in current *grep* buffer to their respective files" \
  %{ 
    find-apply-changes -force 
  }
}

cork kakoune-gdb https://github.com/occivink/kakoune-gdb

cork fzf https://github.com/andreyorst/fzf.kak %{
  require-module fzf
  require-module fzf-file
  set-option global fzf_file_command "fd . --type f -uu --follow"
  set-option global fzf_file_preview false
  require-module fzf-vcs
  #set-option global fzf_git_command "fd . --type f --follow"
  require-module fzf-buffer
}

cork number-toggle https://github.com/evanrelf/number-toggle.kak %{
  require-module number-toggle
  set global number_toggle_params -hlcursor -separator ' '
}

cork kakoune-mirror https://github.com/delapouite/kakoune-mirror %{
  # Suggested mapping
  map global normal "'" ': enter-user-mode -lock mirror<ret>'
}

cork focus https://github.com/caksoylar/kakoune-focus %{
  set global focus_context_lines 1
  set global focus_separator "{FocusMarker}╞══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╡"
  map global user o ': focus-toggle<ret>' -docstring "Toggle selection focus"
}


# Insert mode ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈

map -docstring 'indent' global insert <tab> '<a-;><a-gt>'
map -docstring 'deindent' global insert <s-tab> '<a-;><lt>' 

# Normal mode ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈

map -docstring 'Surround mode' global user s ': surround-mode<ret>'
map -docstring 'Replace' global user r ': enter-replace-mode<ret>'

map -docstring 'Enter inser mode with main selection' global normal <a-I> ': enter-insert-mode-with-main-selection<ret>'
map -docstring 'Select all occurrences of current selection' global normal <a-L> '"aZ*%s<ret>"bZ"az"b<a-z>a'

map -docstring 'Comment' global normal '#' ':comment-line<ret>'
map -docstring 'Comment' global normal '<a-#>' ':comment-block<ret>'

def sidetree -override %{ connect panel sidetree --select %val{buffile} }
map -docstring 'sidetree' global user <tab> ': sidetree<ret>'

# Prompt mode ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈

map -docstring 'Search' global prompt <c-f> '<home>(?i)<end>'
map -docstring 'Paste' global prompt <c-v> '<c-r>"'
map -docstring 'Insert the directory name of the current buffer' global prompt <c-d> '%sh{dirname "$kak_bufname"}<a-!>/'

# Disable space autoselecting the next completion
# Disable backspace exiting the prompt
# https://github.com/mawww/kakoune/issues/4311
map global prompt <space> '<a-;>: eval -save-regs a %{ set-register a " "; exec <lt>c-r<gt>a }<ret>'
map global prompt <backspace> '<left><del>'

# Personal scripts ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈

set-option global makecmd 'make -j 8'

load-conf lsp
load-conf c++

load-conf ide
ide-setup

# Filetype hooks ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈

hook global BufCreate .*\.bb(|class|append) %{
  set buffer filetype sh
}
hook global BufCreate .*\.conf %{
  set buffer filetype ini
}

# ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
colorscheme %sh{ colorscheme-switch --current }
