require-module plug

# Let plug.kak manage itself.
plug plug https://github.com/alexherbo2/plug.kak %{
  # Upgrade plugins
  # Install plugins and build them.
  define-command plug-upgrade -docstring 'plug-upgrade' %{
    plug-install
    plug-execute lsp cargo build --release
  }
}

plug-core %{
  # User interface
  set-option -add global ui_options ncurses_status_on_top=false
  set-option -add global ui_options ncurses_assistant=none
  set-option -add global ui_options ncurses_set_title=no

  colorscheme %sh{ colorscheme-switch --current }

  set-option global modelinefmt '{yellow}%opt{out_of_view_status_line}{default} {{mode_info}} {magenta}%val{client}{default} at {yellow}%val{session}{default} on {green}%val{bufname}{default} {{context_info}} {cyan}U+%sh{printf ''%04x'' "$kak_cursor_char_value"}{default} {cyan}%val{cursor_line}{default}:{cyan}%val{cursor_char_column}{default}'
  #set-option global modelinefmt '{yellow}%opt{out_of_view_status_line}{default} {{mode_info}} {magenta}%val{client}{default} at {yellow}%val{session}{default} on {green}%val{bufname}{default} {cyan}%val{cursor_line}{default}:{cyan}%val{cursor_char_column}{default} {{context_info}}'

  # Tools
  set-option global makecmd 'make -j 8'
  set-option global grepcmd 'rg --column --with-filename'

  # Window-based settings
  hook global WinCreate .* %{
    addhl window/numbers number-lines -hlcursor -separator ' '
    addhl window/matching show-matching
    # addhl window/show-whitespaces show-whitespaces
  }

  # Default indentation
  set global tabstop 2
  set global indentwidth 2

  # [space] [backspace] [ret]
  map -docstring 'leader' global normal <space> ': enter-user-mode user<ret>'  
  map -docstring 'remove all sels except main' global normal <backspace> <space> 
  map -docstring 'remove main sel' global normal <a-backspace> <a-space> 
  map -docstring 'Command Prompt' global normal <ret> :

  # User Mode bindings
  map -docstring 'Open terminal' global user <ret> ': connect-terminal<ret>'

	# Filetype mode from [,] or [c-f]
  declare-user-mode filetype
  unmap global normal ,
  map global normal , ': enter-user-mode filetype<ret>'
  map global normal <c-f> ': enter-user-mode filetype<ret>'
  map global insert <c-f> ': enter-user-mode filetype<ret>'

  # Prompt
  map -docstring 'Search' global prompt <c-f> '<home>(?i)<end>'
  map -docstring 'Paste' global prompt <c-v> '<c-r>"'
  map -docstring 'Insert the directory name of the current buffer' global prompt <c-d> '%sh{dirname "$kak_bufname"}<a-!>/'

  # Select all occurrences of current selection.
  # https://code.visualstudio.com/docs/getstarted/keybindings#_basic-editing
  map -docstring 'Select all occurrences of current selection' global normal <a-L> '"aZ*%s<ret>"bZ"az"b<a-z>a'

  # Comment
  map -docstring 'Comment' global normal '#' ':comment-line<ret>'
  map -docstring 'Comment' global normal '<a-#>' ':comment-block<ret>'
  
  def sidetree %{
    tmux-terminal-impl 'split-window -hb -l 30' kcr shell -s %val[session] -c %val[client] sidetree
  }

  map -docstring 'sidetree' global user <tab> ': sidetree<ret>'
}

hook global ModuleLoaded tmux %{
  define-command tmux-terminal-popup -params 1.. -shell-completion -docstring '
  tmux-terminal-popup <program> [<arguments>]: create a new terminal as a tmux popup
  The program passed as argument will be executed in the new popup' \
  %{
      tmux-terminal-impl 'display-popup -E -h 75% -d #{pane_current_path}' %arg{@}
  }
  alias global popup tmux-terminal-popup
}

plug auto-pairs https://github.com/alexherbo2/auto-pairs.kak %{
  auto-pairs-enable
}

plug replace-mode https://github.com/alexherbo2/replace-mode.kak %{
  map -docstring 'Replace' global user r ': enter-replace-mode<ret>'
}

plug manual-indent https://github.com/alexherbo2/manual-indent.kak %{
  # Manual indent
  hook global WinCreate .* %{
    manual-indent-enable
  }

  # Remove filetype hooks
  hook global WinSetOption filetype=.* %{
    manual-indent-remove-filetype-hooks
  }
}

plug-old kakoune-find https://github.com/occivink/kakoune-find %{
  define-command -docstring \
  "grep-apply-changes: apply changes specified in current *grep* buffer to their respective files" \
  grep-apply-changes %{ find-apply-changes -force }
}

plug search-highlighter https://github.com/alexherbo2/search-highlighter.kak %{
  search-highlighter-enable
}
plug out-of-view https://github.com/alexherbo2/out-of-view.kak %{
	out-of-view-enable
}

plug execute-key https://github.com/alexherbo2/execute-key.kak
plug phantom https://github.com/alexherbo2/phantom.kak %{
  phantom-enable
  phantom-add-mappings
}

plug snippets https://github.com/alexherbo2/snippets.kak %{
  # Enable snippets
  snippets-enable

  # Options
  set-option global snippets_scope global global/arrows global/bullets global/dashes global/punctuation global/boxes global/math

  # Mappings
  # Create new snippets
  map -docstring 'Edit snippets' global user / ': snippets-edit<ret>'

  # Add auto-pairs integration
  map -docstring 'Expand snippets' global insert <ret> '<a-;>: snippets-enter auto-pairs-insert-new-line<ret>'

  # Hooks
  # Indent snippets with tabs
  hook global BufCreate '.+/\.?config/snippets/.+' %{
    set-option buffer indentwidth 0
  }  
}

plug-old kakoune-gdb https://github.com/occivink/kakoune-gdb

plug evaluate-selections https://github.com/alexherbo2/evaluate-selections.kak %{
  map -docstring 'Evaluate selections' global user = ': evaluate-selections<ret>'
}

plug fzf https://github.com/andreyorst/fzf.kak %{
  require-module fzf-file
  set-option global fzf_file_command "fd . --type f -uu --follow"
  set-option global fzf_file_preview false
  require-module fzf-vcs
  set-option global fzf_git_command "fd . --type f --follow"
  require-module fzf-buffer
}

plug-old search https://github.com/alexherbo2/search.kak %{
  map -docstring 'Search plain text' global normal f ':search<ret>(?i)\Q'
  map -docstring 'Search' global normal F ':search<ret>'  
}

plug-autoload user-mode
plug-autoload lsp
plug-autoload clip
plug-autoload my-cpp
plug-autoload surround %{
  map -docstring 'Surround mode' global user s ': surround-mode<ret>'
}

# kakoune.cr
# https://github.com/alexherbo2/kakoune.cr
evaluate-commands %sh{
  kcr init kakoune
}

