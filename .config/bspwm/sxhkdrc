# vim: ft=sh
# terminal
super + Return
  tmux-term

super + shift + Return
  dropdown

super + p
  bspc config top_padding 0; \
  polybar-msg cmd toggle

# apps
# super + shift + {b,c,f,m,s}
  # {firefox,code,pcmanfm,alacritty -e ncmpcpp,alacritty -e scrcpy}

super + shift + c
  colorscheme-switch

# brightness keybindings
XF86MonBrightness{Up,Down}
  brightness {up,down}

# media keys
XF86Audio{Next,Prev,Play,Stop}
  mpc {next,prev,toggle,stop}

# volume
XF86Audio{RaiseVolume,LowerVolume}
  volume volume {up,down}
XF86AudioMute
  volume mute

# TABBED

# Remove current tab from tabbed
super + t; r
  ~/.config/bspwm/tabc.sh $(bspc query -N -n focused) remove

# At given direction: join two windows into a new tabbed or add window to an existing tabbed
super + t; {h,j,k,l}
  ~/.config/bspwm/tabc.sh $(bspc query -N -n {west,south,north,east}) add $(bspc query -N -n focused)

# lockscreen
#super + l
#  betterlockscreen -l blur

# screenshot keybindings
Print
  rofi-shoot

# program launcher
super + space
  rofi -show drun

# make sxhkd reload its configuration files:
super + Escape
  pkill -USR1 -x sxhkd

# gaps
super + g
    bspc config window_gap 0
super + shift + g
    bspc config window_gap 5

# bspwm hotkeys

# quit/restart bspwm
super + shift + {e,r}
  bspc {quit,wm -r}

# close and kill
super + {_,shift + }q
  bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
  bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
  bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + b
  bspc node -s biggest.local

#
# state/flags
#

# toggle the window state
super + {shift + t,f,shift + f}
  state={pseudo_tiled,floating,fullscreen}; \
  bspc query -T -n "focused.${state}" && state=tiled; \
  bspc node -t "$state"

# set the node flags
super + ctrl + {m,x,y,z}
  bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# Send desktop to next monitor
super + shift + o
  desk=$(bspc query -D -d focused); \
  bspc desktop -m next; \
  bspc monitor -f next; \
  bspc desktop -f $desk

# focus the node in the given direction
# All of the extra stuff is to try prev/next in case directions dont work,
# i.e. in monocle layout.
super + {_,shift + }{h,j,k,l}
  fs={f,s}; \
  dir=( {west prev,south prev,north next, east next} ); \
  bspc node -$fs ${dir[1]}.local || \
  bspc node -$fs ${dir[2]}.local

# focus the node for the given path jump
super + {a,b,comma,period}
  bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop

alt + {_,shift + }Tab
  bspc node -f {next,prev}.window.local


# focus the next/previous desktop in the current monitor
super + bracket{left,right}
  bspc desktop -f {prev,next}.local

# focus the last node/desktop
# super + {grave,Tab}
#   bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
  bspc wm -h off; \
  bspc node {older,newer} -f; \
  bspc wm -h on

# focus or send to the given desktop
super + {1-9,0}
  eval "$(xdotool getmouselocation --shell)" && \
  xdotool mousemove 10000 10000 && \
  bspc desktop -f '{1-9,0}' && \
  xdotool mousemove --screen $SCREEN $X $Y

super shift + {1-9,0}
  bspc node -d '{1-9,0}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
  bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
  bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
  bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
  bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
  bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
  bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
  bspc node -v {-20 0,0 20,0 -20,20 0}
