#!/bin/bash

# modify the following two variables to match your requirements
# path to the folder where you store your colorschemes
COLORSCHEME_PATH=$HOME/.config/colorschemes
# path to your xrdb config file
XRDB_CONF_PATH=$HOME/.Xresources

DEFAULT_COLORSCHEME=flatblue-dark

getXrdbColor() {
    xrdb -query | LANG=C grep -F "$@:" | cut -d '#' -f2
}

updateXrdb() {
    xrdb -merge $XRDB_CONF_PATH
    xrdb -merge $COLORSCHEME
}

build_query() {
    local key=$1
    local value=$2
    case key in
        \*.foreground)
            printf "%b" 
    query="\033]10;#$(getXrdbColor foreground)\007"
    query+="\033]11;#$(getXrdbColor background)\007"
    query+="\033]12;#$(getXrdbColor cursorColor)\007"
    # urxvt borders
    query+="\033]708;#$(getXrdbColor background)\007"
    esac
}

updateTerminal() {
    COLORSCHEME="$(getColorschemePath)"
    while read line; do
        local kv=( ${line//:/ } )
        local key=${kv[0]}
        local value=${kv[1]}
        case $key in
            \*.color*)
                local n=${key//\*.color/}
                echo -en "\033]4;$n;$value\007"
            ;;
            \*.foreground)
                echo -en "\033]10;$value\007"
            ;;
            \*.background)
                echo -en "\033]11;$value\007"
                # URXVT border color
                echo -en "\033]708;$value\007"
            ;;
            \*.cursorColor)
                echo -en "\033]12;$value\007"
            ;;
        esac
    done <<< $(cat $COLORSCHEME)
}

updateTerminals() {
    # send sequence to all terminals
    local query terminal
    query=$(updateTerminal);
    for terminal in /dev/pts/[0-9]*; do
        printf "%b" "${query}" > "${terminal}" &
    done
}

buildTermiteConfig() {
    echo "###########################################"
    echo "# DO NOT EDIT                             #"
    echo "# Generated by colorscheme-switch         #"
    echo "# Set options in config.in                #"
    echo "###########################################"  
    echo ""
    cat ~/.config/termite/config.in
    echo ""
    echo "[colors]"
    while read line; do
        local kv=( ${line//:/ } )
        local key=${kv[0]}
        local value=${kv[1]}
        case $key in
            \*.color*)
                local n=${key//\*.color/}
                echo "color$n = $value"
            ;;
            \*.foreground)
                echo "foreground = $value"
            ;;
            \*.background)
                echo "background = $value"
            ;;
        esac
    done <<< $(xrdb -query)
}

updateTermite() {
    buildTermiteConfig > ~/.config/termite/config
    killall termite -USR1
}

build_kitty_theme() {
    echo "#:#########################################"
    echo "#: DO NOT EDIT                             #"
    echo "#: Generated by colorscheme-switch         #"
    echo "#:#########################################"  
    while read line; do
        local kv=( ${line//:/ } )
        local key=${kv[0]}
        local value=${kv[1]}
        case $key in
            \*.color*)
                local n=${key//\*.color/}
                echo "color$n $value"
            ;;
            \*.foreground)
                echo "foreground $value"
            ;;
            \*.background)
                echo "background $value"
            ;;
        esac
    done <<< $(xrdb -query)
    echo "active_tab_foreground   #$(getXrdbColor color232)"
    echo "active_tab_background   #$(getXrdbColor color12)"
    echo "active_tab_font_style   bold"
    echo "inactive_tab_foreground #$(getXrdbColor color7)"
    echo "inactive_tab_background #$(getXrdbColor color232)"
    echo "inactive_tab_font_style normal"
}

update_kitty() {
    build_kitty_theme > ~/.config/kitty/theme.conf
    for file in /tmp/kitty-*.sock; do 
      kitty @ --to=unix:$file set-colors -a -c ~/.config/kitty/theme.conf
    done
}

build_alacritty_theme() {
    echo "###########################################"
    echo "# DO NOT EDIT                             #"
    echo "# Generated by colorscheme-switch         #"
    echo "###########################################"  
    echo "colors:"
    echo "  primary:"
    echo "    background: '#$(getXrdbColor background)'"
    echo "    foreground: '#$(getXrdbColor foreground)'"
    echo "  normal:"
    echo "    black:   '#$(getXrdbColor color0)'"
    echo "    red:     '#$(getXrdbColor color1)'"
    echo "    green:   '#$(getXrdbColor color2)'"
    echo "    yellow:  '#$(getXrdbColor color3)'"
    echo "    blue:    '#$(getXrdbColor color4)'"
    echo "    magenta: '#$(getXrdbColor color5)'"
    echo "    cyan:    '#$(getXrdbColor color6)'"
    echo "    white:   '#$(getXrdbColor color7)'"
    echo ""
    echo "  bright:"
    echo "    black:   '#$(getXrdbColor color8)'"
    echo "    red:     '#$(getXrdbColor color9)'"
    echo "    green:   '#$(getXrdbColor color10)'"
    echo "    yellow:  '#$(getXrdbColor color11)'"
    echo "    blue:    '#$(getXrdbColor color12)'"
    echo "    magenta: '#$(getXrdbColor color13)'"
    echo "    cyan:    '#$(getXrdbColor color14)'"
    echo "    white:   '#$(getXrdbColor color15)'"
    echo ""
    echo "  indexed_colors:"
    echo "    - { index: 232, color: '#$(getXrdbColor color232)' }"
    echo "    - { index: 233, color: '#$(getXrdbColor color233)' }"
    echo "    - { index: 234, color: '#$(getXrdbColor color234)' }"
    echo "    - { index: 235, color: '#$(getXrdbColor color235)' }"
    echo "    - { index: 236, color: '#$(getXrdbColor color236)' }"
    echo "    - { index: 237, color: '#$(getXrdbColor color237)' }"
    echo "    - { index: 238, color: '#$(getXrdbColor color238)' }"
    echo "    - { index: 239, color: '#$(getXrdbColor color239)' }"
    echo "    - { index: 240, color: '#$(getXrdbColor color240)' }"
    echo "    - { index: 241, color: '#$(getXrdbColor color241)' }"
    echo "    - { index: 242, color: '#$(getXrdbColor color242)' }"
    echo "    - { index: 243, color: '#$(getXrdbColor color243)' }"
    echo "    - { index: 244, color: '#$(getXrdbColor color244)' }"
    echo "    - { index: 245, color: '#$(getXrdbColor color245)' }"
    echo "    - { index: 246, color: '#$(getXrdbColor color246)' }"
    echo "    - { index: 247, color: '#$(getXrdbColor color247)' }"
    echo "    - { index: 248, color: '#$(getXrdbColor color248)' }"
    echo "    - { index: 249, color: '#$(getXrdbColor color249)' }"
    echo "    - { index: 250, color: '#$(getXrdbColor color250)' }"
    echo "    - { index: 251, color: '#$(getXrdbColor color251)' }"
    echo "    - { index: 252, color: '#$(getXrdbColor color252)' }"
    echo "    - { index: 253, color: '#$(getXrdbColor color253)' }"
    echo "    - { index: 254, color: '#$(getXrdbColor color254)' }"
    echo "    - { index: 255, color: '#$(getXrdbColor color255)' }"
    echo ""
}

update_alacritty() {
    build_alacritty_theme > ~/.config/alacritty/theme.yml
}

updateKak() {
    for session in $(kak -l); do
        echo "colorscheme $COLORSCHEME_NAME" | kak -p $session
    done
}

update_gtk() {
    gsettings set org.gnome.desktop.interface gtk-theme $(xrdb -query | grep -Po "gtk-theme:\h*\K.*")
    gsettings set org.gnome.desktop.interface icon-theme $(xrdb -query | grep -Po "icon-theme:\h*\K.*")
}

toggle_gtk_dark() {
    gtk_theme="Matcha-light-azul"
    icon_theme="Papirus-Light"
    if gsettings get org.gnome.desktop.interface gtk-theme | grep "'$gtk_theme'"; then
        gtk_theme="Matcha-dark-azul"
        icon_theme="Papirus-Dark"
    fi
    
    # gsettings works in wayland
    gsettings set org.gnome.desktop.interface gtk-theme "$gtk_theme"
    gsettings set org.gnome.desktop.interface icon-theme "$icon_theme"

    # xsettingsd works in x
    echo "Net/ThemeName \"$gtk_theme\"" > $HOME/.config/xsettingsd/xsettingsd.conf
    echo "Net/IconThemeName \"$icon_theme\"" >> $HOME/.config/xsettingsd/xsettingsd.conf
    
    # Reload xsettingsd config
    killall -SIGHUP xsettingsd
}

getCurrentColorscheme() {
    local name=$(cat "$COLORSCHEME_PATH/current" 2> /dev/null)
    [[ -z "$name" ]] && name="$DEFAULT_COLORSCHEME"
    echo $name
}

getColorschemePath() {
    local name=${1:-$(getCurrentColorscheme)}
    find "${COLORSCHEME_PATH}/$name".*resources -type f
}

showColorschemes() {
    ls "${COLORSCHEME_PATH}/" | sed 's/\..resources//g; s/.*\///g; /^current$/d'
}

showHelp() {
    cat <<EOF
Make sure that the variables located at the top of the script colorscheme-switch match your setup
Usage:
      colorscheme-switch
      colorscheme-switch (-h | --help)
      colorscheme-switch (-l | --list)
      colorscheme-switch (-s colorscheme | --switch colorscheme)

Calling with no arguments will rotate between colorschemes

Arguments:
    --help = show this help text
    --list = list all available colorschemes
    --switch = set a available colorscheme in xrdb and all terminals
    --reload = reload the current colorscheme
    --terminal = reload the current colorscheme just for the current terminal
    --gtk = Toggle gtk dark/light theme
    --current = get the name of the current colorscheme
EOF
}

switch() {
    COLORSCHEME_NAME=$1
    if getColorschemePath $COLORSCHEME_NAME &> /dev/null; then
        COLORSCHEME="$(getColorschemePath $COLORSCHEME_NAME)"
        echo "$COLORSCHEME_NAME" > $COLORSCHEME_PATH/current
        updateXrdb
        updateKak
        # updateTerminals
        # updateTermite
        update_kitty
        update_alacritty
        # update_gtk
        # killall -sUSR1 polybar
    else
        exit 1
    fi
}

swap() {
  local cur=$(getCurrentColorscheme)
  local next=$cur
  for col in $(showColorschemes); do
    ! [[ $col = $cur ]] && next=$col
  done
  echo $next
  switch $next
}

main() {
    [[ $# = 0 ]] && swap && return 0
    local option argument
    option="${1-}"
    argument="${2-}"
    case "${option}" in
        -r | --reload)
            switch $(getCurrentColorscheme);
            ;;
        -g | --gtk)
            toggle_gtk_dark
            ;;
        -c | --current)
            getCurrentColorscheme
            ;;
        -s | --switch)
            switch $argument
            ;;
        -l | --list)
            showColorschemes
            ;;
        -h | --help)
            showHelp
            ;;
        *)
            showHelp
            exit 1
            ;;
    esac
}

COLORSCHEME=''
main "$@"
