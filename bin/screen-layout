#!/bin/bash

EDP1_SCALE=1

if hyprctl monitors -j | jq -e '.[] | select(.name == "eDP-1") | .width > 1920'; then
    EDP1_SCALE=1.5
fi

_layout_office_triple_vert() {
  x=2560
  y=1440
  echo "desc:Dell Inc. DELL U2719D CNRBS83,highres,$(( 0 ))x$(( 0 )),1,transform,1"
  echo "desc:Dell Inc. DELL U2719D 5NRBS83,highres,$(( y ))x$(( 0 )),1,transform,0"
  echo "desc:Dell Inc. DELL U2719D 7NRBS83,highres,$(( y ))x$(( y )),1,transform,0"
  echo "eDP-1,highres,6240x1480,$EDP1_SCALE"
}

_old_layout_office_triple_vert() {
  echo "desc:Dell Inc. DELL U2719D 7NRBS83,highres,1920x0,1,transform,1"
  echo "desc:Dell Inc. DELL U2719D 5NRBS83,highres,3360x0,1,transform,3"
  echo "desc:Dell Inc. DELL U2719D CNRBS83,highres,4800x0,1,transform,3"
  echo "eDP-1,highres,6240x1480,$EDP1_SCALE"
}

_layout_cpi() {
  echo "desc:Lenovo Group Limited LEN T25d-10 VKKC0608,1920x1200,0x0,1"
  echo "desc:Lenovo Group Limited LEN T25d-10 VKKC0338,1920x1200,1920x0,1"
  echo "eDP-1,highres,0x1200,$EDP1_SCALE"
}

_layout_single() {
  echo "eDP-1,highres,0x0,$EDP1_SCALE"
}

_layout_home() {
  echo "desc:Dell Inc. DELL S2721QS CH3CM43,preferred,0x0,1.25" # bitdepth, 10, cm, hdr, sdrbrightness, 1.0"
  echo "eDP-1,preferred,0x1728,$EDP1_SCALE"
}

_layout_mirror() {
  echo "eDP-1,highres,0x0,$EDP1_SCALE"
  hyprctl monitors -j | jq -r '.[].name | select(. != "eDP-1")' |
    while read name; do
      [[ -n "$name" ]] && echo "$name,preferred,auto,1,mirror,eDP-1"
    done
}

_layout_auto() {
  serials=$(hyprctl monitors -j | jq -r '.[].serial')
  layout=$(
    if echo "$serials" | grep "7NRBS83" -q; then
      _layout_office_triple_vert
    elif echo "$serials" | grep VKKC0608 -q; then
      _layout_cpi
    elif echo "$serials" | grep CH3CM43 -q; then
      _layout_home
    elif echo "$serials" | grep 0x000004CE -q; then
      _layout_umag
    else
      _layout_single
    fi
  )
  lid=$(cat /proc/acpi/button/lid/*/state 2> /dev/null)
  if [[ "$lid" =~ "closed" ]] &&  [[ "$serials" != "" ]]; then
    echo "$layout" | sed '/^eDP-1/d'
    echo "eDP-1,disable"
  else
    echo "$layout"
  fi
}

_echorun() {
  echo "$@"
  "$@"
}

# _apply_sway() {
#   while IFS="" read line; do
#     declare -a "arr=($line)"
#     name=${arr[0]}
#     x=${arr[1]}
#     y=${arr[2]}
#     trans=${arr[3]:-normal}
#     if [[ "$x" == "off" ]]; then
#       _echorun swaymsg "output '$name' disable"
#     else
#       _echorun swaymsg "output '$name' enable pos $x $y transform $trans"
#     fi
#   done
#
#   # Set scale of display at home
#   _echorun swaymsg "output 'Dell Inc. DELL S2721QS CH3CM43' scale 1.25"
# }

_apply_hyprland() {
  while IFS="" read line; do
    _echorun hyprctl keyword monitor "$line"
  done
}

_daemon() {
  (
      echo "update"
      socat - UNIX-CONNECT:$XDG_RUNTIME_DIR/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock | grep '^monitor\(added\|removed\)v2>>' &
      while sleep 30; do echo "update"; done
  ) | while read args; do
      local prev_layout=""
      while true; do
        local layout=$(_layout_auto)
        if [[ "$layout" != "$prev_layout" ]]; then
          echo "$layout" | "_apply_$method"
        fi
        prev_layout=$layout
        sleep 5
      done
  done
}

# Run

method=hyprland
layout=${1:-auto}

if [[ " $@ " =~ " -d " ]]; then
  _daemon
else
  "_layout_$layout" | "_apply_$method"
fi
