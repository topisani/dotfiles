# ~/.profile: executed by the command interpreter for login shells.
# vim:ft=sh
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# set PATH so it includes user's private bin directories
PATH="$HOME/dev/flutter/bin:$PATH"
PATH="$HOME/.cargo/bin:$PATH"
PATH="$HOME/go/bin:$PATH"
command -v yarn > /dev/null && PATH="$(yarn --offline global bin):$PATH"

PATH="$PATH:/usr/lib/dart/bin"
PATH="$PATH:$HOME/dev/flutter/.pub-cache/bin"
PATH="$HOME/.ghcup/bin:$PATH"

# opam configuration
test -r /home/topisani/.opam/opam-init/init.sh && . /home/topisani/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true

export PATH="$HOME/.bin:$HOME/.local/bin:/usr/local/bin:$PATH"

# Kill the GNU
# export CC=/usr/bin/clang
# export CXX=/usr/bin/clang++

# Global cache for cmake projects using CPM
export CPM_SOURCE_CACHE=$HOME/.cache/CPM

# Auto make flags
export NUMCPUS=`grep -c '^processor' /proc/cpuinfo`
export MAKEFLAGS="-j$NUMCPUS --load-average=$NUMCPUS"

# Colors
default=$(tput sgr0)
red=$(tput setaf 1)
green=$(tput setaf 2)
purple=$(tput setaf 5)
orange=$(tput setaf 9)

export PAGER=less # Less colors for man pages
export LESS_TERMCAP_mb=$red # Begin blinking
export LESS_TERMCAP_md=$orange # Begin bold
export LESS_TERMCAP_me=$default # End mode
export LESS_TERMCAP_se=$default # End standout-mode
export LESS_TERMCAP_so=$purple # Begin standout-mode - info box
export LESS_TERMCAP_ue=$default # End underline
export LESS_TERMCAP_us=$green # Begin underline

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
	. "$HOME/.bashrc"
    fi
fi

# kak: filetype=sh

export PATH="$HOME/.poetry/bin:$PATH"

export TMPDIR="/tmp"

export SSH_AUTH_SOCK=/tmp/ssh-agent.$HOST.sock
ssh-add -l 2>/dev/null >/dev/null
if [ $? -ge 2 ]; then
  ssh-agent -a "$SSH_AUTH_SOCK" >/dev/null
fi

# use docker buildkit
export DOCKER_BUILDKIT=1

export _HOME_DOT_PROFILE_INCLUDED=1
